{"version":3,"sources":["firestore.js","SendMessage.js","ChatMessage.js","ChatRoom.js","logo.svg","SignIn.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","config","firestore","SendMessage","messagesRef","user","useState","message","setMessage","send","e","a","preventDefault","trim","length","msg","console","log","add","text","createdAt","FieldValue","serverTimestamp","sender","nickname","uid","onSubmit","className","type","value","onChange","target","disabled","ChatMessage","id","formRef","ref","ChatRoom","onSignOut","collection","query","orderBy","limit","useCollectionData","idField","messages","dummy","useRef","useEffect","current","scrollIntoView","behavior","onClick","reverse","map","SignIn","props","setNickname","src","logo","alt","alert","App","setUser","Date","getTime","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4d673c8.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport config from './firebaseConfig.json'\r\nimport 'firebase/firestore'\r\n\r\nfirebase.initializeApp(config)\r\n\r\nconst firestore = firebase.firestore()\r\n\r\nexport default firestore","import { useState } from 'react'\r\nimport firebase from 'firebase/app'\r\n\r\nfunction SendMessage({messagesRef, user})\r\n{\r\n\r\n    const [message, setMessage] = useState('')\r\n\r\n    const send = async (e) => {\r\n        e.preventDefault()\r\n        if (message.trim().length > 0) {\r\n            const msg = message.trim()\r\n            setMessage('')\r\n\r\n            console.log('sending')\r\n            await messagesRef.add({\r\n                text: msg,\r\n                createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n                sender: user.nickname,\r\n                uid: user.uid\r\n            })\r\n            console.log('sent')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={send} className=\"footer\">\r\n            <input \r\n                type=\"text\" \r\n                value={message} \r\n                onChange={(e)=>setMessage(e.target.value)}\r\n                className=\"px-2 py-3 bg-gray-500 flex-grow\"\r\n                />\r\n            <button \r\n                type=\"submit\" \r\n                disabled={message.trim().length === 0}\r\n                className=\"bg-blue-900 px-10\"\r\n                >Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SendMessage","function ChatMessage({message, id, user, formRef}) {\r\n    const {text, sender, uid} = message\r\n\r\n    return (\r\n        <div ref={formRef} className={`message text-left ${uid === user.uid ? 'sent' : 'received'}`}>\r\n            <div className=\"sender\">{sender}</div>\r\n            <div className=\"text\">{text}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatMessage","import firestore from './firestore.js'\r\nimport { useRef, useEffect } from 'react'\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore'\r\n\r\nimport SendMessage from './SendMessage.js'\r\nimport ChatMessage from './ChatMessage.js'\r\n\r\nfunction ChatRoom({user, onSignOut}) {\r\n\r\n  const messagesRef = firestore.collection('messages')\r\n  const query = messagesRef.orderBy('createdAt', 'desc').limit(25)\r\n\r\n  const [messages] = useCollectionData(query, {idField: 'id'})\r\n\r\n  const dummy = useRef()\r\n\r\n  useEffect(() => {\r\n    dummy.current.scrollIntoView({ behavior: 'smooth' })\r\n  }, [messages])\r\n\r\n  return (\r\n    <div className=\"ChatRoom\">\r\n      <div className=\"header\">\r\n        <h1 className=\"font-bold text-2xl self-center\">Realtime Chat App</h1>\r\n        <button \r\n          className=\"bg-gray-700 py-2 px-5 rounded-sm\"\r\n          onClick={onSignOut}\r\n          >Sign Out</button>\r\n      </div>\r\n\r\n\r\n      <div className=\"main\">\r\n        { messages && messages.reverse().map((msg) => <ChatMessage message={msg} key={msg.id} user={user}/>) }\r\n\r\n        <span ref={dummy}></span>\r\n\r\n      </div>\r\n\r\n      <SendMessage messagesRef={messagesRef} user={user}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatRoom","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useState } from 'react'\r\nimport logo from './logo.svg'\r\n\r\nfunction SignIn(props) {\r\n\r\n const [nickname, setNickname] = useState('')\r\n\r\n const signIn = (e) => {\r\n    e.preventDefault()\r\n    if (nickname.trim() === \"\") {\r\n        alert('Enter a valid nickname')\r\n    } else {\r\n        props.onSubmit(nickname)\r\n    }\r\n }\r\n\r\n return (\r\n    <div className=\"px-8 md:px-16 min-h-screen\">\r\n        <div className=\"h-16\"></div>\r\n        <img src={logo} alt=\"Application logo\" className=\"App-logo\"/>\r\n\r\n        <h1 className=\"text-2xl font-bold text-center mb-16\">Realtime Chat Application</h1>\r\n\r\n        <form onSubmit={signIn}>\r\n            <div>Nickname: </div>\r\n            <input \r\n                type=\"text\" \r\n                value={nickname} \r\n                onChange={(e) => setNickname(e.target.value)}\r\n                className=\"w-full rounded bg-gray-500 p-2 text-gray-100 mb-4\"\r\n                />\r\n\r\n            <button type=\"submit\" className=\"bg-blue-400 p-2 mb-2 w-full rounded hover:bg-blue-500\">Enter Chat Room</button>\r\n        </form>\r\n\r\n    </div>\r\n )\r\n}\r\n\r\nexport default SignIn","import './App.css';\n\n\nimport { useState } from 'react'\n\nimport ChatRoom from './ChatRoom.js'\nimport SignIn from './SignIn.js'\n\nfunction App() {\n\n    const [user, setUser] = useState(null)\n\n    const submit = (nickname) => {\n        setUser({\n            nickname,\n            uid: (new Date()).getTime()\n        })\n    }\n\n    const resetUser = () => {\n        setUser(null)\n    }\n\n    return (\n        <div className=\"App\">\n            { user ? \n                <ChatRoom user={user} onSignOut={resetUser}/> : \n                <SignIn onSubmit={submit}/> \n            }\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}